---
- name: Create Python virtual environment at /opt/qtile (if not exists)
  pip:
    name: pip
    virtualenv: "{{ qtile_venv_path }}"
    virtualenv_command: python3 -m venv
  become_user: "{{ qtile_user }}"
  when: not qtile_venv_ready

- name: Upgrade pip in virtual environment
  pip:
    name: pip
    state: latest
    virtualenv: "{{ qtile_venv_path }}"
  become_user: "{{ qtile_user }}"
  when: not qtile_already_installed

- name: Install qtile and dependencies in virtual environment (if not already installed)
  pip:
    name:
      - qtile
      - psutil
    virtualenv: "{{ qtile_venv_path }}"
  become_user: "{{ qtile_user }}"
  when: not qtile_already_installed

- name: Display qtile installation status
  debug:
    msg: |
      === QTILE PYTHON ENVIRONMENT ===
      {% if qtile_already_installed %}
      Qtile already installed - skipping installation
      {% else %}
      Qtile installed fresh in virtual environment
      {% endif %}
      Virtual environment: {{ qtile_venv_path }}

- name: Set executable permissions on qtile binaries
  file:
    path: "{{ item }}"
    mode: '0755'
  with_items:
    - "{{ qtile_venv_path }}/bin/qtile"
    - "{{ qtile_venv_path }}/bin/python"
    - "{{ qtile_venv_path }}/bin/python3"

- name: Make qtile binaries readable by all users
  file:
    path: "{{ qtile_venv_path }}/bin/qtile"
    mode: 'a+rx'